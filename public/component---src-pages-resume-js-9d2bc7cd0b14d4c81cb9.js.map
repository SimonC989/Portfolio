{"version":3,"sources":["webpack:///./src/pages/resume.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js"],"names":["DownloadsPage","data","_public_static_d_1817893237_json__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","allFile","edges","map","file","index","key","href","node","publicURL","download","name","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","loader","enqueue","createContext","ListLink","props","react_default","style","display","marginRight","gatsby_link_default","to","children","__webpack_exports__","_3892401927","margin","maxWidth","padding","textShadow","marginBottom","backgroundImage","site","siteMetadata","title","listStyle","float","layout_ListLink"],"mappings":"6IAoCeA,UA/BO,WACpB,IAAMC,EAAIC,EAAAD,KAYV,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UACGJ,EAAKM,QAAQC,MAAMC,IAAI,SAACC,EAAMC,GAC7B,OACER,EAAAC,EAAAC,cAAA,MAAIO,IAAG,OAASD,GACdR,EAAAC,EAAAC,cAAA,KAAGQ,KAAMH,EAAKI,KAAKC,UAAWC,UAAQ,GACnCN,EAAKI,KAAKG,iCC1B3B,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,0JCsBhCK,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEC,IAAMtB,cAAcuB,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,kGCOcC,QAAOC,QAELN,IAAMO,cAAc,ICb/C,IAAMC,EAAW,SAAAC,GAAK,OACpBC,EAAAjC,EAAAC,cAAA,MAAIiC,MAAO,CAAEC,QAAO,eAAkBC,YAAW,SAC/CH,EAAAjC,EAAAC,cAACoC,EAAArC,EAAD,CAAMsC,GAAIN,EAAMM,IAAKN,EAAMO,YAKhBC,EAAA,WAAApB,GAAkB,IAAfmB,EAAenB,EAAfmB,SACV1C,EAAI4C,EAAA5C,KAYV,OACEoC,EAAAjC,EAAAC,cAAA,OAAKiC,MAAO,CAAEQ,OAAM,YAAeC,SAAU,IAAKC,QAAO,SAAYC,WAAU,SAC7EZ,EAAAjC,EAAAC,cAAA,UAAQiC,MAAO,CAAEY,aAAY,SAAYD,WAAU,SACjDZ,EAAAjC,EAAAC,cAACoC,EAAArC,EAAD,CAAMsC,GAAG,IAAIJ,MAAO,CAAEW,WAAU,OAAUE,gBAAe,SACvDd,EAAAjC,EAAAC,cAAA,MAAIiC,MAAO,CAAEC,QAAO,WAAetC,EAAKmD,KAAKC,aAAaC,QAE5DjB,EAAAjC,EAAAC,cAAA,MAAIiC,MAAO,CAAEiB,UAAS,OAAUC,MAAK,UACnCnB,EAAAjC,EAAAC,cAACoD,EAAD,CAAUf,GAAG,KAAb,QACAL,EAAAjC,EAAAC,cAACoD,EAAD,CAAUf,GAAG,WAAb,SACAL,EAAAjC,EAAAC,cAACoD,EAAD,CAAUf,GAAG,aAAb,WACAL,EAAAjC,EAAAC,cAAA,KAAGQ,KAAK,oCAAR,UACAwB,EAAAjC,EAAAC,cAACoD,EAAD,CAAUf,GAAG,YAAb,iBAGHC","file":"component---src-pages-resume-js-9d2bc7cd0b14d4c81cb9.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nconst DownloadsPage = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allFile(filter: { extension: { eq: \"pdf\" } }) {\n        edges {\n          node {\n            publicURL\n            name\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <h1>All PDF Downloads</h1>\n      <ul>\n        {data.allFile.edges.map((file, index) => {\n          return (\n            <li key={`pdf-${index}`}>\n              <a href={file.node.publicURL} download>\n                {file.node.name}\n              </a>\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default DownloadsPage","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  \n  return (\n    <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem`, textShadow: `none`, }}>\n      <header style={{ marginBottom: `1.5rem`, textShadow: `none` }}>\n        <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n          <h3 style={{ display: `inline` }}>{data.site.siteMetadata.title}</h3>\n        </Link>\n        <ul style={{ listStyle: `none`, float: `right` }}>\n          <ListLink to=\"/\">Home</ListLink>\n          <ListLink to=\"/about/\">About</ListLink>\n          <ListLink to=\"/contact/\">Contact</ListLink>\n          <a href=\"../../static/SimonChanResume.pdf\">Resume</a>\n          <ListLink to=\"/resume/\">Resume Test</ListLink>\n        </ul>\n      </header>\n      {children}\n    </div>\n  )\n}\n"],"sourceRoot":""}